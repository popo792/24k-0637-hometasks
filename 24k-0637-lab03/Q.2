#include <iostream>
using namespace std;

struct N2 {
    string k;
    int v;
    N2* n;
};

N2* build(string q, int r) {
    N2* t = new N2;
    t->k=q; t->v=r; t->n=NULL;
    return t;
}

void addTail(N2*& h, string q, int r) {
    N2* t = build(q,r);
    if(!h) { h=t; return; }
    N2* u=h;
    while(u->n) u=u->n;
    u->n=t;
}

void delFront(N2*& h) {
    if(!h) return;
    N2* t=h;
    h=h->n;
    delete t;
}

void findName(N2* h, string x) {
    while(h) {
        if(h->k==x) { cout<<h->k<<" "<<h->v<<endl; return; }
        h=h->n;
    }
    cout<<"Not Found"<<endl;
}

void findPos(N2* h,int pos) {
    int c=1;
    while(h) {
        if(c==pos) { cout<<h->k<<" "<<h->v<<endl; return; }
        c++; h=h->n;
    }
    cout<<"Invalid"<<endl;
}

void printAll(N2* h) {
    while(h) {
        cout<<h->k<<" "<<h->v<<endl;
        h=h->n;
    }
}

int main() {
    N2* p=NULL;
    addTail(p,"Item1",50);
    addTail(p,"Item2",70);
    addTail(p,"Item3",90);
    delFront(p);
    findName(p,"Item2");
    findPos(p,2);
    printAll(p);
}
