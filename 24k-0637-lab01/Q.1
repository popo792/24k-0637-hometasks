#include <iostream>
#include <string>
using namespace std;

class ResearchPaper {
    string *authors;
    int count;

    public:
    ResearchPaper(int n, const string author[]) {
        count = n;
        authors = new string [count];
        for (int i = 0; i < count; i++)
        {
            authors[i] = author[i];
        }
    }
        
        ~ResearchPaper() {
            delete[] authors;
        }

        ResearchPaper (const ResearchPaper &other) {
            count = other.count;
            authors = other.authors;
        }

        ResearchPaper &operator = (const ResearchPaper &other) {
            count = other.count;
            authors = new string [count];
            for (int i = 0; i < count; i++){
                authors[i] = other.authors[i];
            }
            return *this;
        }
        
        void display() const {
            cout<< "Authors:"<<endl;
            for (int i = 0; i < count; i++){
                cout << authors[i]<<endl;
            }
        }

        void setAuthor (int i, const string &name) {
            if (i >=0 && i < count) {
                authors[i] = name;
            }
        }
};

int main () {
    string list1[] = {"Alice", "Bob", "Charlie"};
    ResearchPaper paper1(3, list1);

    cout << "Original Paper 1:" << endl;
    paper1.display();

    ResearchPaper paper2 = paper1;
    cout << "\nPaper 2 (Shallow Copy Constructor):" << endl;
    paper2.display();

    paper2.setAuthor(0, "David");
    cout << "\nAfter modifying Paper 2:" << endl;
    paper2.display();
    cout << "Paper 1 also changes (because shallow copy):" << endl;
    paper1.display();

    string list2[] = {"Eve", "Frank"};
    ResearchPaper paper3(2, list2);
    cout << "\nPaper 3 before assignment:" << endl;
    paper3.display();

    paper3 = paper1;
    cout << "\nPaper 3 after assignment (Deep Copy from Paper 1):" << endl;
    paper3.display();

    paper3.setAuthor(1, "Grace");
    cout << "\nAfter modifying Paper 3:" << endl;
    paper3.display();
    cout << "Paper 1 remains unchanged:" << endl;
    paper1.display();

    return 0;
}
